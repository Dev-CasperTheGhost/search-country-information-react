{"version":3,"sources":["components/AllCountriesList/SearchField.jsx","components/AllCountriesList/SpinnerArea.jsx","components/AllCountriesList/AllCountriesList.jsx","components/CountryInformation/CountryInformation.jsx","components/Header.jsx","App.js","index.js"],"names":["SearchField","handleSearchInput","e","value","target","setState","countryName","searchCountry","event","state","props","handleSelect","region","url","getCountries","clearInput","country","this","className","onSubmit","FormControl","FormLabel","InputGroup","Input","type","id","rounded","isRequired","onChange","placeholder","onClick","children","style","cursor","Select","defaultValue","Component","SpinnerArea","Spinner","thickness","speed","emptyColor","color","size","AllCountriesList","loading","axios","get","then","res","countries","data","maxCountriesPerPage","slice","maxCountriesPerPageIndex","setTimeout","catch","err","console","log","filteredCountry","filter","name","toLowerCase","includes","loadMore","newIndex","map","index","Link","href","key","Box","maxW","borderWidth","Image","src","flag","alt","p","alignItems","fontWeight","Heading","mt","population","toString","replace","capital","display","justifyContent","Button","mb","width","CountryInformation","getCountryData","status","message","match","params","marginTop","Icon","nativeName","subregion","topLevelDomain","alpha2Code","alpha3Code","currencies","currency","List","languages","lang","Header","mx","customTheme","theme","colors","brand","900","800","700","App","ThemeProvider","CSSReset","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09c91032.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  InputRightAddon,\r\n  InputGroup,\r\n} from '@chakra-ui/core';\r\n\r\nexport default class SearchField extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      country: [],\r\n      countryName: '',\r\n    };\r\n  }\r\n\r\n  handleSearchInput = (e) => {\r\n    let value = e.target.value;\r\n    this.setState({\r\n      countryName: value,\r\n    });\r\n\r\n    this.searchCountry();\r\n  };\r\n\r\n  searchCountry = (event) => {\r\n    // event.preventDefault();\r\n    const { countryName } = this.state;\r\n    this.props.searchCountry(countryName);\r\n  };\r\n\r\n  handleSelect = (e) => {\r\n    const region = e.target.value;\r\n    let url = `https://restcountries.eu/rest/v2/region/${region}`;\r\n    if (region === 'all') {\r\n      url = 'https://restcountries.eu/rest/v2/all';\r\n    }\r\n    this.props.getCountries(url);\r\n  };\r\n\r\n  clearInput = () => {\r\n    this.setState({\r\n      countryName: '',\r\n    });\r\n    this.props.getCountries('https://restcountries.eu/rest/v2/all');\r\n  };\r\n\r\n  render() {\r\n    const { countryName } = this.state;\r\n    return (\r\n      <form className='search-container' onSubmit={this.searchCountry}>\r\n        <FormControl>\r\n          <div className=\"search-container-grid\">\r\n            <div>\r\n              <FormLabel>Enter Country</FormLabel>\r\n              <InputGroup>\r\n                <Input\r\n                  type='text'\r\n                  id='country'\r\n                  rounded='0'\r\n                  isRequired\r\n                  value={countryName}\r\n                  onChange={this.handleSearchInput}\r\n                  placeholder=\"this will automatically search\"\r\n                />\r\n                <InputRightAddon\r\n                  onClick={this.clearInput}\r\n                  children='Clear'\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n            <div>\r\n              <FormLabel>Filter by Region</FormLabel>\r\n              <Select isRequired onChange={this.handleSelect}>\r\n                <option defaultValue value='all'>\r\n                  All\r\n                </option>\r\n                <option value='asia'>Asia</option>\r\n                <option value='africa'>Africa</option>\r\n                <option value='americas'>America</option>\r\n                <option value='europe'>Europe</option>\r\n                <option value='oceania'>Oceania</option>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Spinner } from '@chakra-ui/core';\r\n\r\nexport default class SpinnerArea extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"spinner-area\">\r\n        <Spinner\r\n          thickness='4px'\r\n          speed='0.65s'\r\n          emptyColor='gray.200'\r\n          color='blue.500'\r\n          size='xl'\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Image, Heading, Link, Button } from '@chakra-ui/core';\r\n\r\nimport SearchField from './SearchField';\r\nimport SpinnerArea from './SpinnerArea';\r\n\r\nconst url = 'https://restcountries.eu/rest/v2/all';\r\n\r\nexport default class AllCountriesList extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      countries: [],\r\n      maxCountriesPerPage: [],\r\n      loading: true,\r\n      maxCountriesPerPageIndex: 20,\r\n    };\r\n  }\r\n\r\n  getCountries = (url) => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        this.setState({\r\n          countries: res.data,\r\n          maxCountriesPerPage: res.data.slice(\r\n            0,\r\n            this.state.maxCountriesPerPageIndex\r\n          ),\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        }, 1000);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  searchCountry = (countryName) => {\r\n    const filteredCountry = this.state.countries.filter(function (country) {\r\n      return country.name.toLowerCase().includes(countryName.toLowerCase());\r\n    });\r\n\r\n    this.setState({\r\n      maxCountriesPerPage: filteredCountry,\r\n    });\r\n  };\r\n\r\n  loadMore = () => {\r\n    const newIndex = this.state.maxCountriesPerPageIndex + 20;\r\n    this.setState({\r\n      maxCountriesPerPageIndex: newIndex,\r\n      maxCountriesPerPage: [...this.state.countries].slice(0, newIndex),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCountries(url);\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    const { maxCountriesPerPage, loading } = this.state;\r\n    return (\r\n      <>\r\n        {/* Search Field */}\r\n        <SearchField\r\n          getCountries={this.getCountries}\r\n          searchCountry={this.searchCountry}\r\n        />\r\n\r\n        {/* Grid with all Countries */}\r\n        <div className='all-countries-grid'>\r\n          {loading ? (\r\n            <SpinnerArea />\r\n          ) : (\r\n            maxCountriesPerPage.map((country, index) => {\r\n              return (\r\n                <Link\r\n                  href={'/search-country-information-react/#/c/' + country.name}\r\n                  key={index}>\r\n                  <Box maxW='sm' borderWidth='1px' rounded='lg'>\r\n                    <Image src={country.flag} alt={country.name} />\r\n                    <Box p='5'>\r\n                      <Box alignItems='baseline'>\r\n                        <Box style={{ fontWeight: 'bold' }}>\r\n                          <Heading>{country.name}</Heading>\r\n                        </Box>\r\n                        <Box mt='1'>\r\n                          <p>\r\n                            <span style={{ fontWeight: 'bold' }}>\r\n                              Population:{' '}\r\n                            </span>{' '}\r\n                            {country.population\r\n                              .toString()\r\n                              .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n                          </p>\r\n                        </Box>\r\n                        <Box mt='1'>\r\n                          <p>\r\n                            <span style={{ fontWeight: 'bold' }}>Region: </span>\r\n                            {country.region}\r\n                          </p>\r\n                        </Box>\r\n                        <Box mt='1'>\r\n                          <p>\r\n                            <span style={{ fontWeight: 'bold' }}>\r\n                              Capital:{' '}\r\n                            </span>\r\n                            {country.capital}\r\n                          </p>\r\n                        </Box>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                </Link>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <Button\r\n            mb='20'\r\n            mt='20'\r\n            style={{ width: '250px' }}\r\n            onClick={this.loadMore}>\r\n            Load more\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Icon, Heading, Image, ListItem } from '@chakra-ui/core';\r\n\r\nconst url = 'https://restcountries.eu/rest/v2/name/';\r\n\r\nexport default class CountryInformation extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      country: [],\r\n    };\r\n  }\r\n\r\n  getCountryData = (name) => {\r\n    axios\r\n      .get(url + name)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            country: res.data[0],\r\n          });\r\n        } else {\r\n          // Country not found\r\n          console.log(res.data);\r\n          return this.setState({\r\n            message: 'There was an error getting the country!',\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCountryData(this.props.match.params.country);\r\n  }\r\n\r\n  render() {\r\n    const { country } = this.state;\r\n    return (\r\n      <div style={{ marginTop: '20px' }}>\r\n        <Link href='/search-country-information-react/#/' className='back-btn'>\r\n          <Icon name='arrow-back' color='white.500' />\r\n          Back\r\n        </Link>\r\n\r\n        {country.name ? (\r\n          <div className='country-information-grid'>\r\n            <div>\r\n              <Image src={country.flag} alt={country.name} />\r\n            </div>\r\n\r\n            <div>\r\n              <Heading>{country.name}</Heading>\r\n\r\n              <div className='information-grid'>\r\n                <div>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Native Name: </span>\r\n                    {country.nativeName}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Capital: </span>\r\n                    {country.capital}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Population: </span>\r\n                    {country.population\r\n                      .toString()\r\n                      .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Region: </span>\r\n                    {country.region}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Sub Region: </span>\r\n                    {country.subregion}\r\n                  </p>\r\n                </div>\r\n\r\n                <div>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>\r\n                      Top Level Domain:{' '}\r\n                    </span>\r\n                    {country.topLevelDomain[0]}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Alpha2Code: </span>\r\n                    {country.alpha2Code}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Alpha3Code: </span>\r\n                    {country.alpha3Code}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Currencies: </span>\r\n                    {country.currencies.map((currency, index) => {\r\n                      return <ListItem key={index}>{currency.name}</ListItem>;\r\n                    })}\r\n                  </p>\r\n                </div>\r\n                <div className='languages'>\r\n                  <span style={{ fontWeight: 'bold' }}>Languages: </span>\r\n                  <div className=\"languages-grid\">\r\n                  {country.languages.map((lang, index) => {\r\n                    return (\r\n                      <div className='lang-item' key={index}>\r\n                        {lang.name} ({lang.nativeName})\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <h1>Loading...</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Heading, Link, Icon } from '@chakra-ui/core';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header-grid\">\r\n          <Heading>Find Country Information</Heading>\r\n          <div>\r\n          <Link\r\n            target='_blank'\r\n            color='teal.500'\r\n            href='https://www.frontendmentor.io/challenges/rest-countries-api-with-color-theme-switcher-5cacc469fec04111f7b848ca'>\r\n            Idea Credits\r\n            <Icon name='external-link' mx='2px' />\r\n          </Link> <br/>\r\n          <Link target='_blank' color='teal.500' href='https://github.com/Dev-CasperTheGhost/search-country-information-react'>\r\n            Source Code\r\n            <Icon name='external-link' mx='2px' />\r\n          </Link>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { CSSReset, ThemeProvider, theme } from '@chakra-ui/core';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport AllCountriesList from './components/AllCountriesList/AllCountriesList';\nimport CountryInformation from './components/CountryInformation/CountryInformation';\n\nimport Header from \"./components/Header\"\n\nconst customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    brand: {\n      900: \"#1a365d\",\n      800: \"#153e75\",\n      700: \"#2a69ac\",\n    },\n  },\n};\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={customTheme}>\n          <CSSReset />\n          <Header />\n          <Router basename=\"/\">\n            <Route exact path=\"/\"  component={AllCountriesList} />\n          </Router>\n          <Router basename=\"/c\">\n          <Route path=\"/:country\" component={CountryInformation} />\n          </Router>\n        </ThemeProvider>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}