{"version":3,"sources":["components/AllCountriesList/SearchField.jsx","components/AllCountriesList/SpinnerArea.jsx","components/AllCountriesList/AllCountriesList.jsx","components/CountryInformation/CountryInformation.jsx","components/Header.jsx","App.js","index.js"],"names":["SearchField","handleSearchInput","e","preventDefault","value","target","setState","countryName","searchCountry","state","props","handleSelect","region","url","getCountries","clearInput","country","this","className","onSubmit","type","id","rounded","onChange","placeholder","onClick","children","style","cursor","isRequired","defaultValue","Component","SpinnerArea","thickness","speed","emptyColor","color","size","AllCountriesList","loading","axios","get","then","res","countries","data","maxCountriesPerPage","slice","maxCountriesPerPageIndex","catch","err","console","log","filteredCountry","filter","name","toLowerCase","includes","loadMore","newIndex","map","index","href","borderWidth","src","flag","alt","p","alignItems","fontWeight","mt","population","toString","replace","capital","length","display","justifyContent","mb","width","CountryInformation","getCountryData","status","message","match","params","ArrowBack","nativeName","subregion","topLevelDomain","alpha2Code","alpha3Code","spacing","currencies","currency","languages","lang","Header","mx","customTheme","theme","colors","brand","900","800","700","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96ed3153.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  InputRightAddon,\r\n  InputGroup,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport default class SearchField extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      country: [],\r\n      countryName: \"\",\r\n    };\r\n  }\r\n\r\n  handleSearchInput = (e) => {\r\n    e.preventDefault();\r\n    let value = e.target.value;\r\n    this.setState({\r\n      countryName: value,\r\n    });\r\n    this.searchCountry();\r\n  };\r\n\r\n  searchCountry = (e) => {\r\n    e && e.preventDefault();\r\n    const { countryName } = this.state;\r\n    this.props.searchCountry(countryName);\r\n  };\r\n\r\n  handleSelect = (e) => {\r\n    const region = e.target.value;\r\n    let url = `https://restcountries.eu/rest/v2/region/${region}`;\r\n    if (region === \"all\") {\r\n      url = \"https://restcountries.eu/rest/v2/all\";\r\n    }\r\n    this.props.getCountries(url);\r\n  };\r\n\r\n  clearInput = () => {\r\n    this.setState({\r\n      countryName: \"\",\r\n    });\r\n    this.props.getCountries(\"https://restcountries.eu/rest/v2/all\");\r\n  };\r\n\r\n  render() {\r\n    const { countryName } = this.state;\r\n    return (\r\n      <form className=\"search-container\" onSubmit={this.searchCountry}>\r\n        <FormControl>\r\n          <div className=\"search-container-grid\">\r\n            <div>\r\n              <FormLabel>Enter Country</FormLabel>\r\n              <InputGroup>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"country\"\r\n                  rounded=\"0\"\r\n                  value={countryName}\r\n                  onChange={this.handleSearchInput}\r\n                  placeholder=\"this will automatically search\"\r\n                />\r\n                <InputRightAddon\r\n                  onClick={this.clearInput}\r\n                  children=\"Clear\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n            <div>\r\n              <FormLabel>Filter by Region</FormLabel>\r\n              <Select isRequired onChange={this.handleSelect}>\r\n                <option defaultValue value=\"all\">\r\n                  All\r\n                </option>\r\n                <option value=\"asia\">Asia</option>\r\n                <option value=\"africa\">Africa</option>\r\n                <option value=\"americas\">America</option>\r\n                <option value=\"europe\">Europe</option>\r\n                <option value=\"oceania\">Oceania</option>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Spinner } from \"@chakra-ui/react\";\r\n\r\nexport default class SpinnerArea extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"spinner-area\">\r\n        <Spinner thickness=\"4px\" speed=\"0.65s\" emptyColor=\"gray.200\" color=\"blue.500\" size=\"xl\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box, Image, Heading, Link, Button } from \"@chakra-ui/react\";\r\n\r\nimport SearchField from \"./SearchField\";\r\nimport SpinnerArea from \"./SpinnerArea\";\r\n\r\nconst url = \"https://restcountries.eu/rest/v2/all\";\r\n\r\nexport default class AllCountriesList extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loading: true,\r\n      countries: [],\r\n      maxCountriesPerPage: [],\r\n      maxCountriesPerPageIndex: 20,\r\n    };\r\n  }\r\n\r\n  getCountries = (url) => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        this.setState({\r\n          countries: res.data,\r\n          maxCountriesPerPage: res.data.slice(0, this.state.maxCountriesPerPageIndex),\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  searchCountry = (countryName) => {\r\n    if (countryName !== \"\") {\r\n      const filteredCountry = [...this.state.countries].filter(function (country) {\r\n        return country.name.toLowerCase().includes(countryName.toLowerCase());\r\n      });\r\n      this.setState({\r\n        maxCountriesPerPage: filteredCountry,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        maxCountriesPerPage: [...this.state.countries],\r\n      });\r\n    }\r\n  };\r\n\r\n  loadMore = () => {\r\n    const newIndex = this.state.maxCountriesPerPageIndex + 20;\r\n    this.setState({\r\n      maxCountriesPerPageIndex: newIndex,\r\n      maxCountriesPerPage: [...this.state.countries].slice(0, newIndex),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCountries(url);\r\n  }\r\n\r\n  render() {\r\n    const { maxCountriesPerPage, loading } = this.state;\r\n    return (\r\n      <>\r\n        {/* Search Field */}\r\n        <SearchField getCountries={this.getCountries} searchCountry={this.searchCountry} />\r\n\r\n        {/* Grid with all Countries */}\r\n        <>\r\n          {loading ? (\r\n            <SpinnerArea />\r\n          ) : (\r\n            <>\r\n              <div className=\"all-countries-grid\">\r\n                {maxCountriesPerPage.map((country, index) => {\r\n                  return (\r\n                    <Link\r\n                      href={\"/search-country-information-react/#/c/\" + country.name}\r\n                      key={index}\r\n                    >\r\n                      <Box borderWidth=\"1px\" rounded=\"sm\">\r\n                        <Image src={country.flag} alt={country.name} />\r\n                        <Box p=\"5\">\r\n                          <Box alignItems=\"baseline\">\r\n                            <Box style={{ fontWeight: \"bold\" }}>\r\n                              <Heading>{country.name}</Heading>\r\n                            </Box>\r\n                            <Box mt=\"1\">\r\n                              <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Population: </span>{\" \"}\r\n                                {country.population\r\n                                  .toString()\r\n                                  .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}\r\n                              </p>\r\n                            </Box>\r\n                            <Box mt=\"1\">\r\n                              <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Region: </span>\r\n                                {country.region}\r\n                              </p>\r\n                            </Box>\r\n                            <Box mt=\"1\">\r\n                              <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Capital: </span>\r\n                                {country.capital}\r\n                              </p>\r\n                            </Box>\r\n                          </Box>\r\n                        </Box>\r\n                      </Box>\r\n                    </Link>\r\n                  );\r\n                })}\r\n              </div>\r\n              {/* Don't show load more btn if there's nothing else to load */}\r\n              {this.state.countries.length !== maxCountriesPerPage.length ? (\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <Button mb=\"20\" mt=\"20\" style={{ width: \"250px\" }} onClick={this.loadMore}>\r\n                    Load more\r\n                  </Button>\r\n                </div>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Heading, Image, List, ListItem } from \"@chakra-ui/react\";\r\nimport SpinnerArea from \"../AllCountriesList/SpinnerArea\";\r\nimport { Link } from \"@chakra-ui/react\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons/dist/esm/ArrowBack\";\r\n\r\nconst url = \"https://restcountries.eu/rest/v2/name/\";\r\n\r\nexport default class CountryInformation extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      country: [],\r\n    };\r\n  }\r\n\r\n  getCountryData = (name) => {\r\n    axios\r\n      .get(url + name)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            country: res.data[0],\r\n          });\r\n        } else {\r\n          return this.setState({\r\n            message: \"There was an error getting the country!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCountryData(this.props.match.params.country);\r\n  }\r\n\r\n  render() {\r\n    const { country } = this.state;\r\n    return (\r\n      <div>\r\n        <Link href=\"/search-country-information-react/#/\" className=\"back-btn\">\r\n          <ArrowBackIcon name=\"arrow-back\" color=\"white.500\" />\r\n          Back\r\n        </Link>\r\n\r\n        {country.name ? (\r\n          <div className=\"country-information-grid\">\r\n            <div>\r\n              <Image src={country.flag} alt={country.name} />\r\n            </div>\r\n\r\n            <div>\r\n              <Heading>{country.name}</Heading>\r\n\r\n              <div className=\"information-grid\">\r\n                <div>\r\n                  <p>\r\n                    <span style={{ fontWeight: \"bold\" }}>Native Name: </span>\r\n                    {country.nativeName}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: \"bold\" }}>Capital: </span>\r\n                    {country.capital}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: \"bold\" }}>Population: </span>\r\n                    {country.population.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: \"bold\" }}>Region: </span>\r\n                    {country.region}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: \"bold\" }}>Sub Region: </span>\r\n                    {country.subregion}\r\n                  </p>\r\n                </div>\r\n\r\n                <div>\r\n                  <p>\r\n                    <span style={{ fontWeight: \"bold\" }}>Top Level Domain: </span>\r\n                    {country.topLevelDomain[0]}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: \"bold\" }}>Alpha2Code: </span>\r\n                    {country.alpha2Code}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: \"bold\" }}>Alpha3Code: </span>\r\n                    {country.alpha3Code}\r\n                  </p>\r\n                  <div>\r\n                    <span style={{ fontWeight: \"bold\" }}>Currencies: </span>\r\n                    <List spacing=\"3\">\r\n                      {country.currencies.map((currency, index) => {\r\n                        return <ListItem key={index}>{currency.name}</ListItem>;\r\n                      })}\r\n                    </List>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"languages\">\r\n                <span style={{ fontWeight: \"bold\" }}>Languages: </span>\r\n                <div className=\"languages-grid\">\r\n                  {country.languages.map((lang, index) => {\r\n                    return (\r\n                      <div className=\"lang-item\" key={index}>\r\n                        {lang.name} ({lang.nativeName})\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <SpinnerArea />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Heading, Link, Icon } from \"@chakra-ui/react\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header-grid\">\r\n        <Heading>Find Country Information</Heading>\r\n        <div>\r\n          <Link\r\n            target=\"_blank\"\r\n            color=\"teal.500\"\r\n            href=\"https://www.frontendmentor.io/challenges/rest-countries-api-with-color-theme-switcher-5cacc469fec04111f7b848ca\"\r\n          >\r\n            Idea Credits\r\n            <Icon name=\"external-link\" mx=\"2px\" />\r\n          </Link>{\" \"}\r\n          <br />\r\n          <Link\r\n            target=\"_blank\"\r\n            color=\"teal.500\"\r\n            href=\"https://github.com/Dev-CasperTheGhost/search-country-information-react\"\r\n          >\r\n            Source Code\r\n            <Icon name=\"external-link\" mx=\"2px\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { CSSReset, ChakraProvider, theme } from \"@chakra-ui/react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport AllCountriesList from \"./components/AllCountriesList/AllCountriesList\";\nimport CountryInformation from \"./components/CountryInformation/CountryInformation\";\n\nimport Header from \"./components/Header\";\n\nconst customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    brand: {\n      900: \"#1a365d\",\n      800: \"#153e75\",\n      700: \"#2a69ac\",\n    },\n  },\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ChakraProvider theme={customTheme}>\n          <CSSReset />\n          <Header />\n          <Router basename=\"/\">\n            <Route exact path=\"/\" component={AllCountriesList} />\n          </Router>\n          <Router basename=\"/c\">\n            <Route path=\"/:country\" component={CountryInformation} />\n          </Router>\n        </ChakraProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}