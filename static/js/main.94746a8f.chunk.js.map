{"version":3,"sources":["components/AllCountriesList/SearchField.jsx","components/AllCountriesList/SpinnerArea.jsx","components/AllCountriesList/AllCountriesList.jsx","components/CountryInformation/CountryInformation.jsx","components/Header.jsx","App.js","index.js"],"names":["SearchField","handleSearchInput","e","preventDefault","value","target","setState","countryName","searchCountry","state","props","handleSelect","region","url","getCountries","clearInput","country","this","className","onSubmit","FormControl","FormLabel","InputGroup","Input","type","id","rounded","onChange","placeholder","onClick","children","style","cursor","Select","isRequired","defaultValue","Component","SpinnerArea","Spinner","thickness","speed","emptyColor","color","size","AllCountriesList","loading","axios","get","then","res","countries","data","maxCountriesPerPage","slice","maxCountriesPerPageIndex","catch","err","console","log","filteredCountry","filter","name","toLowerCase","includes","loadMore","newIndex","map","index","Link","href","key","Box","maxW","borderWidth","Image","src","flag","alt","p","alignItems","fontWeight","Heading","mt","population","toString","replace","capital","length","display","justifyContent","Button","mb","width","CountryInformation","getCountryData","status","message","match","params","marginTop","Icon","nativeName","subregion","topLevelDomain","alpha2Code","alpha3Code","currencies","currency","List","languages","lang","Header","mx","customTheme","theme","colors","brand","900","800","700","App","ThemeProvider","CSSReset","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94746a8f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Input,\n  FormControl,\n  FormLabel,\n  Select,\n  InputRightAddon,\n  InputGroup,\n} from '@chakra-ui/core';\n\nexport default class SearchField extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      country: [],\n      countryName: '',\n    };\n  }\n\n  handleSearchInput = (e) => {\n    e.preventDefault();\n    let value = e.target.value;\n    this.setState({\n      countryName: value,\n    });\n    this.searchCountry();\n  };\n\n  searchCountry = (e) => {\n    e && e.preventDefault();\n    const { countryName } = this.state;\n    this.props.searchCountry(countryName);\n  };\n\n  handleSelect = (e) => {\n    const region = e.target.value;\n    let url = `https://restcountries.eu/rest/v2/region/${region}`;\n    if (region === 'all') {\n      url = 'https://restcountries.eu/rest/v2/all';\n    }\n    this.props.getCountries(url);\n  };\n\n  clearInput = () => {\n    this.setState({\n      countryName: '',\n    });\n    this.props.getCountries('https://restcountries.eu/rest/v2/all');\n  };\n\n  render() {\n    const { countryName } = this.state;\n    return (\n      <form className='search-container' onSubmit={this.searchCountry}>\n        <FormControl>\n          <div className='search-container-grid'>\n            <div>\n              <FormLabel>Enter Country</FormLabel>\n              <InputGroup>\n                <Input\n                  type='text'\n                  id='country'\n                  rounded='0'\n                  value={countryName}\n                  onChange={this.handleSearchInput}\n                  placeholder='this will automatically search'\n                />\n                <InputRightAddon\n                  onClick={this.clearInput}\n                  children='Clear'\n                  style={{ cursor: 'pointer' }}\n                />\n              </InputGroup>\n            </div>\n            <div>\n              <FormLabel>Filter by Region</FormLabel>\n              <Select isRequired onChange={this.handleSelect}>\n                <option defaultValue value='all'>\n                  All\n                </option>\n                <option value='asia'>Asia</option>\n                <option value='africa'>Africa</option>\n                <option value='americas'>America</option>\n                <option value='europe'>Europe</option>\n                <option value='oceania'>Oceania</option>\n              </Select>\n            </div>\n          </div>\n        </FormControl>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Spinner } from '@chakra-ui/core';\n\nexport default class SpinnerArea extends Component {\n  render() {\n    return (\n      <div className=\"spinner-area\">\n        <Spinner\n          thickness='4px'\n          speed='0.65s'\n          emptyColor='gray.200'\n          color='blue.500'\n          size='xl'\n        />\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Box, Image, Heading, Link, Button } from '@chakra-ui/core';\n\nimport SearchField from './SearchField';\nimport SpinnerArea from './SpinnerArea';\n\nconst url = 'https://restcountries.eu/rest/v2/all';\n\nexport default class AllCountriesList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      countries: [],\n      maxCountriesPerPage: [],\n      maxCountriesPerPageIndex: 20,\n    };\n  }\n\n  getCountries = (url) => {\n    this.setState({\n      loading: true,\n    });\n    axios\n      .get(url)\n      .then((res) => {\n        this.setState({\n          countries: res.data,\n          maxCountriesPerPage: res.data.slice(\n            0,\n            this.state.maxCountriesPerPageIndex\n          ),\n          loading: false,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  searchCountry = (countryName) => {\n    if (countryName !== '') {\n      const filteredCountry = [...this.state.countries].filter(function (\n        country\n      ) {\n        return country.name.toLowerCase().includes(countryName.toLowerCase());\n      });\n      this.setState({\n        maxCountriesPerPage: filteredCountry,\n      });\n    } else {\n      this.setState({\n        maxCountriesPerPage: [...this.state.countries],\n      });\n    }\n  };\n\n  loadMore = () => {\n    const newIndex = this.state.maxCountriesPerPageIndex + 20;\n    this.setState({\n      maxCountriesPerPageIndex: newIndex,\n      maxCountriesPerPage: [...this.state.countries].slice(0, newIndex),\n    });\n  };\n\n  componentDidMount() {\n    this.getCountries(url);\n  }\n\n  render() {\n    const { maxCountriesPerPage, loading } = this.state;\n    return (\n      <>\n        {/* Search Field */}\n        <SearchField\n          getCountries={this.getCountries}\n          searchCountry={this.searchCountry}\n        />\n\n        {/* Grid with all Countries */}\n        <>\n          {loading ? (\n            <SpinnerArea />\n          ) : (\n            <>\n              <div className='all-countries-grid'>\n                {maxCountriesPerPage.map((country, index) => {\n                  return (\n                    <Link\n                      href={\n                        '/search-country-information-react/#/c/' + country.name\n                      }\n                      key={index}>\n                      <Box maxW='sm' borderWidth='1px' rounded='lg'>\n                        <Image src={country.flag} alt={country.name} />\n                        <Box p='5'>\n                          <Box alignItems='baseline'>\n                            <Box style={{ fontWeight: 'bold' }}>\n                              <Heading>{country.name}</Heading>\n                            </Box>\n                            <Box mt='1'>\n                              <p>\n                                <span style={{ fontWeight: 'bold' }}>\n                                  Population:{' '}\n                                </span>{' '}\n                                {country.population\n                                  .toString()\n                                  .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\n                              </p>\n                            </Box>\n                            <Box mt='1'>\n                              <p>\n                                <span style={{ fontWeight: 'bold' }}>\n                                  Region:{' '}\n                                </span>\n                                {country.region}\n                              </p>\n                            </Box>\n                            <Box mt='1'>\n                              <p>\n                                <span style={{ fontWeight: 'bold' }}>\n                                  Capital:{' '}\n                                </span>\n                                {country.capital}\n                              </p>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </Box>\n                    </Link>\n                  );\n                })}\n              </div>\n              {/* Don't show load more btn if there's nothing else to load */}\n              {this.state.countries.length !== maxCountriesPerPage.length ? (\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                  <Button\n                    mb='20'\n                    mt='20'\n                    style={{ width: '250px' }}\n                    onClick={this.loadMore}>\n                    Load more\n                  </Button>\n                </div>\n              ) : null}\n            </>\n          )}\n        </>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Icon, Heading, Image, ListItem } from '@chakra-ui/core';\nimport SpinnerArea from '../AllCountriesList/SpinnerArea';\n\nconst url = 'https://restcountries.eu/rest/v2/name/';\n\nexport default class CountryInformation extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      country: [],\n    };\n  }\n\n  getCountryData = (name) => {\n    axios\n      .get(url + name)\n      .then((res) => {\n        console.log(res.data);\n\n        if (res.status === 200) {\n          this.setState({\n            country: res.data[0],\n          });\n        } else {\n          return this.setState({\n            message: 'There was an error getting the country!',\n          });\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  componentDidMount() {\n    this.getCountryData(this.props.match.params.country);\n  }\n\n  render() {\n    const { country } = this.state;\n    return (\n      <div style={{ marginTop: '20px' }}>\n        <Link href='/search-country-information-react/#/' className='back-btn'>\n          <Icon name='arrow-back' color='white.500' />\n          Back\n        </Link>\n\n        {country.name ? (\n          <div className='country-information-grid'>\n            <div>\n              <Image src={country.flag} alt={country.name} />\n            </div>\n\n            <div>\n              <Heading>{country.name}</Heading>\n\n              <div className='information-grid'>\n                <div>\n                  <p>\n                    <span style={{ fontWeight: 'bold' }}>Native Name: </span>\n                    {country.nativeName}\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: 'bold' }}>Capital: </span>\n                    {country.capital}\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: 'bold' }}>Population: </span>\n                    {country.population\n                      .toString()\n                      .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: 'bold' }}>Region: </span>\n                    {country.region}\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: 'bold' }}>Sub Region: </span>\n                    {country.subregion}\n                  </p>\n                </div>\n\n                <div>\n                  <p>\n                    <span style={{ fontWeight: 'bold' }}>\n                      Top Level Domain:{' '}\n                    </span>\n                    {country.topLevelDomain[0]}\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: 'bold' }}>Alpha2Code: </span>\n                    {country.alpha2Code}\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: 'bold' }}>Alpha3Code: </span>\n                    {country.alpha3Code}\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: 'bold' }}>Currencies: </span>\n                    {country.currencies.map((currency, index) => {\n                      return <ListItem key={index}>{currency.name}</ListItem>;\n                    })}\n                  </p>\n                </div>\n              </div>\n                <div className='languages'>\n                  <span style={{ fontWeight: 'bold' }}>Languages: </span>\n                  <div className=\"languages-grid\">\n                  {country.languages.map((lang, index) => {\n                    return (\n                      <div className='lang-item' key={index}>\n                        {lang.name} ({lang.nativeName})\n                      </div>\n                    );\n                  })}\n                  </div>\n                </div>\n            </div>\n          </div>\n        ) : (\n          <SpinnerArea />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Heading, Link, Icon } from '@chakra-ui/core';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header-grid\">\n          <Heading>Find Country Information</Heading>\n          <div>\n          <Link\n            target='_blank'\n            color='teal.500'\n            href='https://www.frontendmentor.io/challenges/rest-countries-api-with-color-theme-switcher-5cacc469fec04111f7b848ca'>\n            Idea Credits\n            <Icon name='external-link' mx='2px' />\n          </Link> <br/>\n          <Link target='_blank' color='teal.500' href='https://github.com/Dev-CasperTheGhost/search-country-information-react'>\n            Source Code\n            <Icon name='external-link' mx='2px' />\n          </Link>\n          </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { CSSReset, ThemeProvider, theme } from '@chakra-ui/core';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport AllCountriesList from './components/AllCountriesList/AllCountriesList';\nimport CountryInformation from './components/CountryInformation/CountryInformation';\n\nimport Header from \"./components/Header\"\n\nconst customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    brand: {\n      900: \"#1a365d\",\n      800: \"#153e75\",\n      700: \"#2a69ac\",\n    },\n  },\n};\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={customTheme}>\n          <CSSReset />\n          <Header />\n          <Router basename=\"/\">\n            <Route exact path=\"/\"  component={AllCountriesList} />\n          </Router>\n          <Router basename=\"/c\">\n          <Route path=\"/:country\" component={CountryInformation} />\n          </Router>\n        </ThemeProvider>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}