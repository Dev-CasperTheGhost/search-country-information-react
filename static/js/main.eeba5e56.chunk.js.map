{"version":3,"sources":["components/AllCountriesList/SearchField.jsx","components/AllCountriesList/SpinnerArea.jsx","components/AllCountriesList/AllCountriesList.jsx","components/CountryInformation/CountryInformation.jsx","components/Header.jsx","App.js","index.js"],"names":["SearchField","handleSearchInput","e","setState","countryName","target","value","searchCountry","event","preventDefault","state","props","handleSelect","region","url","getCountries","clearInput","country","this","className","onSubmit","FormControl","FormLabel","InputGroup","Input","type","id","rounded","isRequired","onChange","onClick","children","style","cursor","Select","defaultValue","marginTop","Button","Component","SpinnerArea","Spinner","thickness","speed","emptyColor","color","size","AllCountriesList","loading","axios","get","then","res","countries","data","maxCountriesPerPage","slice","maxCountriesPerPageIndex","setTimeout","catch","err","console","log","filteredCountry","filter","name","toLowerCase","loadMore","map","index","Link","href","key","Box","maxW","borderWidth","Image","src","flag","alt","p","alignItems","fontWeight","Heading","mt","population","toString","replace","capital","display","justifyContent","mb","width","CountryInformation","getCountryData","status","message","match","params","Icon","nativeName","subregion","topLevelDomain","alpha2Code","alpha3Code","currencies","currency","List","languages","lang","Header","mx","customTheme","theme","colors","brand","900","800","700","App","ThemeProvider","CSSReset","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeba5e56.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  Button,\r\n  Select,\r\n  InputRightAddon,\r\n  InputGroup,\r\n} from '@chakra-ui/core';\r\n\r\nexport default class SearchField extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      country: [],\r\n      countryName: '',\r\n    };\r\n  }\r\n\r\n  handleSearchInput = (e) => {\r\n    this.setState({\r\n      countryName: e.target.value,\r\n    });\r\n  };\r\n\r\n  searchCountry = (event) => {\r\n    event.preventDefault();\r\n    const { countryName } = this.state;\r\n    this.props.searchCountry(countryName);\r\n  };\r\n\r\n  handleSelect = (e) => {\r\n    const region = e.target.value;\r\n    let url = `https://restcountries.eu/rest/v2/region/${region}`;\r\n    if (region === 'all') {\r\n      url = 'https://restcountries.eu/rest/v2/all';\r\n    }\r\n    this.props.getCountries(url);\r\n  };\r\n\r\n  clearInput = () => {\r\n    this.setState({\r\n      countryName: '',\r\n    });\r\n    this.props.getCountries('https://restcountries.eu/rest/v2/all');\r\n  };\r\n\r\n  render() {\r\n    const { countryName } = this.state;\r\n    return (\r\n      <form className='search-container' onSubmit={this.searchCountry}>\r\n        <FormControl>\r\n          <div className=\"search-container-grid\">\r\n            <div>\r\n              <FormLabel>Enter Country</FormLabel>\r\n              <InputGroup>\r\n                <Input\r\n                  type='text'\r\n                  id='country'\r\n                  rounded='0'\r\n                  isRequired\r\n                  value={countryName}\r\n                  onChange={this.handleSearchInput}\r\n                />\r\n                <InputRightAddon\r\n                  onClick={this.clearInput}\r\n                  children='Clear'\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n            <div>\r\n              <FormLabel>Filter by Region</FormLabel>\r\n              <Select isRequired onChange={this.handleSelect}>\r\n                <option defaultValue value='all'>\r\n                  All\r\n                </option>\r\n                <option value='asia'>Asia</option>\r\n                <option value='africa'>Africa</option>\r\n                <option value='americas'>America</option>\r\n                <option value='europe'>Europe</option>\r\n                <option value='oceania'>Oceania</option>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </FormControl>\r\n        <FormControl style={{ marginTop: '20px' }}>\r\n          <Button type='submit'>Search</Button>\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Spinner } from '@chakra-ui/core';\r\n\r\nexport default class SpinnerArea extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"spinner-area\">\r\n        <Spinner\r\n          thickness='4px'\r\n          speed='0.65s'\r\n          emptyColor='gray.200'\r\n          color='blue.500'\r\n          size='xl'\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Image, Heading, Link, Button } from '@chakra-ui/core';\r\n\r\nimport SearchField from './SearchField';\r\nimport SpinnerArea from './SpinnerArea';\r\n\r\nconst url = 'https://restcountries.eu/rest/v2/all';\r\n\r\nexport default class AllCountriesList extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      countries: [],\r\n      maxCountriesPerPage: [],\r\n      loading: true,\r\n      maxCountriesPerPageIndex: 30,\r\n    };\r\n  }\r\n\r\n  getCountries = (url) => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        this.setState({\r\n          countries: res.data,\r\n          maxCountriesPerPage: res.data.slice(\r\n            0,\r\n            this.state.maxCountriesPerPageIndex\r\n          ),\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        }, 1000);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  searchCountry = (countryName) => {\r\n    const filteredCountry = this.state.countries.filter(function (country) {\r\n      return country.name.toLowerCase() === countryName.toLowerCase();\r\n    });\r\n\r\n    this.setState({\r\n      maxCountriesPerPage: filteredCountry,\r\n    });\r\n  };\r\n\r\n  loadMore = () => {\r\n    this.setState({\r\n      maxCountriesPerPageIndex: this.state.maxCountriesPerPageIndex + 20,\r\n      maxCountriesPerPage: [...this.state.countries].slice(\r\n        0,\r\n        this.state.maxCountriesPerPageIndex\r\n      ),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCountries(url);\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    const { maxCountriesPerPage, loading } = this.state;\r\n    return (\r\n      <>\r\n        {/* Search Field */}\r\n        <SearchField\r\n          getCountries={this.getCountries}\r\n          searchCountry={this.searchCountry}\r\n        />\r\n\r\n        {/* Grid with all Countries */}\r\n        <div className='all-countries-grid'>\r\n          {loading ? (\r\n            <SpinnerArea />\r\n          ) : (\r\n            maxCountriesPerPage.map((country, index) => {\r\n              return (\r\n                <Link\r\n                  href={'/search-country-information-react/#/c/' + country.name}\r\n                  key={index}>\r\n                  <Box maxW='sm' borderWidth='1px' rounded='lg'>\r\n                    <Image src={country.flag} alt={country.name} />\r\n                    <Box p='5'>\r\n                      <Box alignItems='baseline'>\r\n                        <Box style={{ fontWeight: 'bold' }}>\r\n                          <Heading>{country.name}</Heading>\r\n                        </Box>\r\n                        <Box mt='1'>\r\n                          <p>\r\n                            <span style={{ fontWeight: 'bold' }}>\r\n                              Population:{' '}\r\n                            </span>{' '}\r\n                            {country.population\r\n                              .toString()\r\n                              .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n                          </p>\r\n                        </Box>\r\n                        <Box mt='1'>\r\n                          <p>\r\n                            <span style={{ fontWeight: 'bold' }}>Region: </span>\r\n                            {country.region}\r\n                          </p>\r\n                        </Box>\r\n                        <Box mt='1'>\r\n                          <p>\r\n                            <span style={{ fontWeight: 'bold' }}>\r\n                              Capital:{' '}\r\n                            </span>\r\n                            {country.capital}\r\n                          </p>\r\n                        </Box>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                </Link>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <Button\r\n            mb='20'\r\n            mt='20'\r\n            style={{ width: '250px' }}\r\n            onClick={this.loadMore}>\r\n            Load more\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Icon, Heading, Image, ListItem } from '@chakra-ui/core';\r\n\r\nconst url = 'https://restcountries.eu/rest/v2/name/';\r\n\r\nexport default class CountryInformation extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      country: [],\r\n    };\r\n  }\r\n\r\n  getCountryData = (name) => {\r\n    axios\r\n      .get(url + name)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            country: res.data[0],\r\n          });\r\n        } else {\r\n          // Country not found\r\n          console.log(res.data);\r\n          return this.setState({\r\n            message: 'There was an error getting the country!',\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCountryData(this.props.match.params.country);\r\n  }\r\n\r\n  render() {\r\n    const { country } = this.state;\r\n    return (\r\n      <div style={{ marginTop: '20px' }}>\r\n        <Link href='/search-country-information-react/#/' className='back-btn'>\r\n          <Icon name='arrow-back' color='white.500' />\r\n          Back\r\n        </Link>\r\n\r\n        {country.name ? (\r\n          <div className='country-information-grid'>\r\n            <div>\r\n              <Image src={country.flag} alt={country.name} />\r\n            </div>\r\n\r\n            <div>\r\n              <Heading>{country.name}</Heading>\r\n\r\n              <div className='information-grid'>\r\n                <div>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Native Name: </span>\r\n                    {country.nativeName}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Capital: </span>\r\n                    {country.capital}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Population: </span>\r\n                    {country.population\r\n                      .toString()\r\n                      .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Region: </span>\r\n                    {country.region}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Sub Region: </span>\r\n                    {country.subregion}\r\n                  </p>\r\n                </div>\r\n\r\n                <div>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>\r\n                      Top Level Domain:{' '}\r\n                    </span>\r\n                    {country.topLevelDomain[0]}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Alpha2Code: </span>\r\n                    {country.alpha2Code}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Alpha3Code: </span>\r\n                    {country.alpha3Code}\r\n                  </p>\r\n                  <p>\r\n                    <span style={{ fontWeight: 'bold' }}>Currencies: </span>\r\n                    {country.currencies.map((currency, index) => {\r\n                      return <ListItem key={index}>{currency.name}</ListItem>;\r\n                    })}\r\n                  </p>\r\n                </div>\r\n                <div className='languages'>\r\n                  <span style={{ fontWeight: 'bold' }}>Languages: </span>\r\n                  <div className=\"languages-grid\">\r\n                  {country.languages.map((lang, index) => {\r\n                    return (\r\n                      <div className='lang-item' key={index}>\r\n                        {lang.name} ({lang.nativeName})\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <h1>Loading...</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Heading, Link, Icon } from '@chakra-ui/core';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header-grid\">\r\n          <Heading>Find Country Information</Heading>\r\n          <div>\r\n          <Link\r\n            target='_blank'\r\n            color='teal.500'\r\n            href='https://www.frontendmentor.io/challenges/rest-countries-api-with-color-theme-switcher-5cacc469fec04111f7b848ca'>\r\n            Idea Credits\r\n            <Icon name='external-link' mx='2px' />\r\n          </Link> <br/>\r\n          <Link target='_blank' color='teal.500' href='https://github.com/Dev-CasperTheGhost/search-country-information-react'>\r\n            Source Code\r\n            <Icon name='external-link' mx='2px' />\r\n          </Link>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { CSSReset, ThemeProvider, theme } from '@chakra-ui/core';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport AllCountriesList from './components/AllCountriesList/AllCountriesList';\nimport CountryInformation from './components/CountryInformation/CountryInformation';\n\nimport Header from \"./components/Header\"\n\nconst customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    brand: {\n      900: \"#1a365d\",\n      800: \"#153e75\",\n      700: \"#2a69ac\",\n    },\n  },\n};\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={customTheme}>\n          <CSSReset />\n          <Header />\n          <Router basename=\"/\">\n            <Route exact path=\"/\"  component={AllCountriesList} />\n          </Router>\n          <Router basename=\"/c\">\n          <Route path=\"/:country\" component={CountryInformation} />\n          </Router>\n        </ThemeProvider>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}